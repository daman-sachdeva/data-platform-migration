# This is a basic workflow to help you get started with Actions

name: Deployment for Project HDMI001

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: 'b6d4cd53-eeab-41d1-93a8-665daf75fce1' # Update to '{dataLandingZoneSubscriptionId}'
  AZURE_RESOURCE_GROUP_NAME: 'TEST1'                            # Update to '{dataLandingZoneName}-rg'
  AZURE_LOCATION: 'koreacentral'                                # Update to '{regionName}'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  prerequisite:
    runs-on: ubuntu-latest

    steps:
#    # CLI Setup
#    - name: Setup AZ CLI
#      # install
#      #run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
#      uses: azure/cli@v1

    # Setting up Bicep
    - name: Setup Bicep
      uses: anthony-c-martin/setup-bicep@v0.1

    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZCRE3 }}

    # Validate existence of resource group
    - name: Validating existence of resource group
      id: resource_group_storage
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Validating existence of resource group ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          az group exists --name ${{ env.AZURE_RESOURCE_GROUP_NAME }}
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

  deployment:
    needs: [ prerequisite ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2

    # Login to Azure 
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZCRE3 }}      

    # Bicep Build Infra
    - name: Build Bicep
      # path to your checked-in .bicep file to deploy
      run: bicep build ${{ github.workspace }}/main-infra.bicep

    # Deploy Infra
    - name: Deploy Infrastructure for Data Platform
      id: deploy_infra
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/main-infra.json
        parameters: ${{ github.workspace }}/main-infra.parameters.json
        deploymentMode: Incremental        

#    # Bicep Key Vault
#    - name: Build Bicep
#      # path to your checked-in .bicep file to deploy
#      run: bicep build ${{ github.workspace }}/main-keyvault.bicep
#
#    # Deploy Key Vault
#    - name: Deploy Key Vault for Data Platform
#      id: deploy_key_vault
#      uses: azure/arm-deploy@v1
#      with:
#        scope: resourcegroup
#        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
#        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
#        region: ${{ env.AZURE_LOCATION }}
#        template: ${{ github.workspace }}/main-keyvault.json
#        parameters: ${{ github.workspace }}/main-keyvault.parameters.json
#        deploymentMode: Incremental                

#    # Bicep Key Vault
#    - name: Build Bicep
#      # path to your checked-in .bicep file to deploy
#      run: bicep build ${{ github.workspace }}/main-service-all-at-once.bicep
#
#    # Deploy Services All-at-once
#    - name: Deploy Services All-at-once for Data Platform
#      id: deploy_services
#      uses: azure/arm-deploy@v1
#      with:
#        scope: resourcegroup
#        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
#        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
#        region: ${{ env.AZURE_LOCATION }}
#        template: ${{ github.workspace }}/main-service-all-at-once.json
#        parameters: ${{ github.workspace }}/main-service-all-at-once.parameters.json
#        deploymentMode: Incremental                        

    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout