# This is a basic workflow to help you get started with Actions

name: Deployment for Project HDMI001

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: 'b6d4cd53-eeab-41d1-93a8-665daf75fce1' # Update to '{dataLandingZoneSubscriptionId}'
  AZURE_RESOURCE_GROUP_NAME: 'TEST1'                            # Update to '{dataLandingZoneName}-rg'
  AZURE_LOCATION: 'koreacentral'                                # Update to '{regionName}'
  AZURE_CREDENTIALS: 'v01hGSBUH-~ScYqtBzl7O2YS~SWxxUDKu.'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  prerequisite:
    runs-on: ubuntu-latest

    steps:
 #   # CLI Setup
 #   - name: Setup AZ CLI
 #     # install
 #     #run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
 #     uses: Azure/cli@v1
 #     with:
 #       azcliversion: latest
 #       inlineScript: 
 #         echo "************* Setting Up AZ CLI"

 #   # Setting up Bicep
 #   - name: Setup Bicep
 #     uses: anthony-c-martin/setup-bicep@v0.1

    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
#      env:
#        CREDENTIALS: ${{ env.AZURE_CREDENTIALS }}
      with:
#        creds: ${{ secrets.AZCRE4 }}
#        creds: ${{ env.AZURE_CREDENTIALS }}
        creds: ${{ secrets.AZURE_CREDENTIALS }}
#        creds: ${{ env.CREDENTIALS }}
#        allow-no-subscriptions: true
#        enable-AzPSSession: true
#        environment: 'azurecloud'

    # Validate existence of resource group
    - name: Validating existence of resource group
      id: resource_group_storage
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Validating existence of resource group ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          az group exists --name ${{ env.AZURE_RESOURCE_GROUP_NAME }}

    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

