# This is a basic workflow to help you get started with Actions

name: Deployment for Project HDMI001

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: 'b6d4cd53-eeab-41d1-93a8-665daf75fce1' # Update to '{dataLandingZoneSubscriptionId}'
  AZURE_RESOURCE_GROUP_NAME: 'TEST1'                            # Update to '{dataLandingZoneName}-rg'
  AZURE_LOCATION: 'koreacentral'                                # Update to '{regionName}'
  CREDENTIALS1: '{  \"clientId\": \"b344a205-131f-4a7f-a625-dd9b22b7cb81\",  \"clientSecret\": \"v01hGSBUH-~ScYqtBzl7O2YS~SWxxUDKu.\",  \"subscriptionId\": \"b6d4cd53-eeab-41d1-93a8-665daf75fce1\",  \"tenantId\": \"72f988bf-86f1-41af-91ab-2d7cd011db47\",  \"activeDirectoryEndpointUrl\": \"https://login.microsoftonline.com\",  \"resourceManagerEndpointUrl\": \"https://management.azure.com/\",  \"activeDirectoryGraphResourceId\": \"https://graph.windows.net/\",  \"sqlManagementEndpointUrl\": \"https://management.core.windows.net:8443/\",  \"galleryEndpointUrl\": \"https://gallery.azure.com/\",  \"managementEndpointUrl\": \"https://management.core.windows.net/\"}'
  CREDENTIALS2: '{ "clientId": "b344a205-131f-4a7f-a625-dd9b22b7cb81", "clientSecret": "v01hGSBUH-~ScYqtBzl7O2YS~SWxxUDKu.", "subscriptionId": "b6d4cd53-eeab-41d1-93a8-665daf75fce1", "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47", "activeDirectoryEndpointUrl": "https://login.microsoftonline.com", "resourceManagerEndpointUrl": "https://management.azure.com/", "activeDirectoryGraphResourceId": "https://graph.windows.net/", "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/", "galleryEndpointUrl": "https://gallery.azure.com/", "managementEndpointUrl": "https://management.core.windows.net/"}'
#  ACTIONS_RUNNER_DEBUG: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prerequisite:
    runs-on: ubuntu-latest

    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Check out from repo
#        uses: actions/checkout@v2 

      # Runs a single command using the runners shell
      - name: Run a one-line script 1
        #run: echo Hello, world!
        run: echo "CREDENTIAL 1 is ${{ secrets.AZURE_CREDENTIALS1 }}"

      - name: Run a one-line script 2
        #run: echo Hello, world!
        run: echo "CREDENTIAL 2 is ${{ env.CREDENTIALS2 }}"

#      - name: Debug stream
#        uses: mxschmitt/action-tmate@v3

#     # CLI Setup
#     - name: Setup AZ CLI
#       # install
#       #run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
#       uses: Azure/cli@v1
#       with:
#         azcliversion: latest
#         inlineScript: 
#           echo "************* Setting Up AZ CLI"
#
#      # Setting up Bicep
#      - name: Setup Bicep
#        uses: anthony-c-martin/setup-bicep@v0.1

      # Login to Azure
      - name: Azure Login
        id: azure_login
        uses: azure/login@v1.1
        env:
          CREDENTIALS3: ${{ secrets.AZURE_CREDENTIALS1 }} # finally works at GitHub Action
          CREDENTIALS4: ${{ env.CREDENTIALS1 }} 
        with:
          creds: ${{ env.CREDENTIALS3 }}

#    # Validate existence of resource group
#    - name: Validating existence of resource group
#      id: resource_group_storage
#      uses: azure/cli@v1.0.4
#      with:
#        azcliversion: latest
#        inlineScript: |
#          echo "Validating existence of resource group ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
#          az group exists --name ${{ env.AZURE_RESOURCE_GROUP_NAME }}

#      # Log out from Azure
#      - name: Log out from Azure
#        id: azure_logout
#        uses: azure/cli@v1.0.4
#        with:
#          azcliversion: latest
#          inlineScript: |
#            az logout